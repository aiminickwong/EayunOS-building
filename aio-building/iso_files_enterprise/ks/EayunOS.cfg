install
cdrom
lang zh_CN.UTF-8
keyboard us
authconfig --enableshadow --passalgo=sha512
%include /tmp/part-include
bootloader --location=mbr --driveorder=sda,hda --append="crashkernel=auto rhgb quiet"

%packages --ignoremissing
@^EayunOS System
%end

%pre
touch /tmp/part-include
for DEV in sda hda; do
  if [ -d /sys/block/$DEV ]; then
cat > /tmp/part-include <<__EOF__
clearpart --drives=$DEV --all
__EOF__
  fi
done
%end

%pre
cd /usr/share/anaconda/pixmaps/rnotes/
rm -fv en/*
mv rnotes_mgmt.png en/
%end

%post
sed -i 's/#LOCKD_TCPPORT/LOCKD_TCPPORT/' /etc/sysconfig/nfs
sed -i 's/#LOCKD_UDPPORT/LOCKD_UDPPORT/' /etc/sysconfig/nfs
sed -i 's/#MOUNTD_PORT/MOUNTD_PORT/' /etc/sysconfig/nfs
sed -i 's/#STATD_PORT/STATD_PORT/' /etc/sysconfig/nfs

# for enforcing neutron security group
echo 'net.bridge.bridge-nf-call-iptables = 1' >> /etc/sysctl.conf
echo 'net.bridge.bridge-nf-call-ip6tables = 1' >> /etc/sysctl.conf

# eayunos license validation
cat > /usr/libexec/vdsm/hooks/before_vm_start/01_license <<__EOF__
#!/usr/bin/python

import os
import sys
import hooking
from subprocess import call

from ovirt_hosted_engine_setup import constants as ohostedcons

def read_config():
    config = {}
    with open(ohostedcons.FileLocations.ENGINE_VM_CONF, 'r') as f:
        content = f.read().splitlines()
    for line in content:
        if '=' in line:
            key, value = line.split('=')
            config[key] = value
    return config

if os.path.exists(ohostedcons.FileLocations.ENGINE_VM_CONF):
    config = read_config()
    vm_uuid_element = hooking.read_domxml().getElementsByTagName('uuid')[0]
    vm_uuid = vm_uuid_element.childNodes[0].nodeValue
    if not config.get('vmId', '') == vm_uuid:
        if not 0 == call(['eayunos-lic']):
            sys.stderr.write('Cannot run vm becasue license validation failed\n')
            sys.exit(2)
__EOF__

chmod 755 /usr/libexec/vdsm/hooks/before_vm_start/01_license

chkconfig NetworkManager off
rm -rfv /etc/yum.repos.d/*

sed -i 's/{HEE_EAYUNOS_VERSION}/HigherVersion/' /etc/eayunos-console-node/answers.conf

# workaround for auto start ovirt-image-daemon
chkconfig ovirt-imageio-daemon on
%end

# Reboot after installation
reboot --eject
