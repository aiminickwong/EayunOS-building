install
cdrom
lang zh_CN.UTF-8
keyboard us
clearpart --all --initlabel
authconfig --enableshadow --passalgo=sha512
bootloader --location=mbr --driveorder=sda,hda --append="crashkernel=auto rhgb quiet"

%packages --ignoremissing
@core
@epel
@x11
@ovirt-management
@ovirt-node
%end

%pre
cd /usr/share/anaconda/pixmaps/rnotes/
rm -fv en/*
mv rnotes_mgmt.png en/
%end

%post --nochroot
cp /tmp/rootpw /mnt/sysimage/tmp/rootpw
cd /mnt/sysimage/etc/yum.repos.d/
mkdir tmp
mv ./* tmp/

mkdir -p /mnt/sysimage/var/lib/exports
cp -r /run/install/repo/neutron_appliance /mnt/sysimage/var/lib/exports/
chown -R 36:36 /mnt/sysimage/var/lib/exports/neutron_appliance
chmod -R u+w /mnt/sysimage/var/lib/exports/neutron_appliance
echo "/var/lib/exports/neutron_appliance *(rw)" >> /mnt/sysimage/etc/exports
%end

%post --log /root/anaconda-post-setup.log
chkconfig libvirtd off
chkconfig vdsmd off


echo "Creating a partial answer file"
ENGINEPASSWD=`cat /tmp/rootpw`
rm -f /tmp/rootpw
cat > /var/lib/ovirt-engine/setup/answers/eayunos-engine-answers <<__EOF__
# action=setup
[environment:default]
OVESETUP_DIALOG/confirmSettings=bool:True
OVESETUP_CONFIG/applicationMode=str:both
OVESETUP_CONFIG/remoteEngineSetupStyle=none:None
OVESETUP_CONFIG/adminPassword=str:$ENGINEPASSWD
OVESETUP_CONFIG/storageIsLocal=bool:False
OVESETUP_CONFIG/firewallManager=str:iptables
OVESETUP_CONFIG/remoteEngineHostRootPassword=none:None
OVESETUP_CONFIG/updateFirewall=bool:True
OVESETUP_CONFIG/remoteEngineHostSshPort=none:None
OVESETUP_CONFIG/fqdn=str:$(hostname)
OVESETUP_CONFIG/storageType=none:None
OSETUP_RPMDISTRO/requireRollback=none:None
OSETUP_RPMDISTRO/enableUpgrade=none:None
OVESETUP_DB/database=str:engine
OVESETUP_DB/fixDbViolations=none:None
OVESETUP_DB/secured=bool:False
OVESETUP_DB/host=str:localhost
OVESETUP_DB/user=str:engine
OVESETUP_DB/securedHostValidation=bool:False
OVESETUP_DB/port=int:5432
OVESETUP_ENGINE_CORE/enable=bool:True
OVESETUP_CORE/engineStop=none:None
OVESETUP_SYSTEM/memCheckEnabled=bool:True
OVESETUP_SYSTEM/nfsConfigEnabled=bool:True
OVESETUP_PKI/organization=str:aio.com
OVESETUP_CONFIG/isoDomainMountPoint=str:/var/lib/exports/iso
OVESETUP_CONFIG/isoDomainName=str:ISO_DOMAIN
OVESETUP_CONFIG/isoDomainACL=str:*(rw)
OVESETUP_AIO/configure=bool:True
OVESETUP_AIO/storageDomainName=str:local_storage
OVESETUP_AIO/storageDomainDir=str:/var/lib/images
OVESETUP_PROVISIONING/postgresProvisioningEnabled=bool:True
OVESETUP_APACHE/configureRootRedirection=bool:True
OVESETUP_APACHE/configureSsl=bool:True
OVESETUP_CONFIG/websocketProxyConfig=bool:True
OVESETUP_ENGINE_CONFIG/fqdn=str:($hostname)
OVESETUP_DWH_CORE/enable=bool:True
OVESETUP_DWH_DB/database=str:ovirt_engine_history
OVESETUP_DWH_DB/secured=bool:False
OVESETUP_DWH_DB/host=str:localhost
OVESETUP_DWH_DB/disconnectExistingDwh=none:None
OVESETUP_DWH_DB/restoreBackupLate=bool:True
OVESETUP_DWH_DB/user=str:ovirt_engine_history
OVESETUP_DWH_DB/securedHostValidation=bool:False
OVESETUP_DWH_DB/performBackup=none:None
OVESETUP_DWH_DB/password=str:history
OVESETUP_DWH_DB/port=str:5432
OVESETUP_DWH_PROVISIONING/postgresProvisioningEnabled=bool:True
OVESETUP_REPORTS_CORE/enable=bool:True
OVESETUP_REPORTS_CONFIG/adminPassword=str:$ENGINEPASSWD
OVESETUP_REPORTS_DB/database=str:ovirt_engine_reports
OVESETUP_REPORTS_DB/secured=bool:False
OVESETUP_REPORTS_DB/host=str:localhost
OVESETUP_REPORTS_DB/user=str:ovirt_engine_reports
OVESETUP_REPORTS_DB/securedHostValidation=bool:False
OVESETUP_REPORTS_DB/port=str:5432
OVESETUP_REPORTS_PROVISIONING/postgresProvisioningEnabled=bool:True
__EOF__

cat > /etc/rc.d/init.d/eayunos-init-setup <<__EOF__
#!/bin/bash
#
# One time setup script for EayunOS
# 
# chkconfig: 2345 9 20

case "\$1" in
  start)
    chkconfig eayunos-init-setup off
    echo "$(ip addr show eth0|grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*'|grep -Eo '([0-9]*\.){3}[0-9]*') $(hostname)" >> /etc/hosts
    /etc/ovirt-engine/post-engine-setup.sh &
    engine-setup --jboss-home=/usr/share/ovirt-engine-jboss-as --config=/var/lib/ovirt-engine/setup/answers/eayunos-engine-answers --offline
    ovirt-optimizer-setup --password=$ENGINEPASSWD
    vm-backup-setup --password=$ENGINEPASSWD
    engine-manage-domains-setup
  ;;
  stop|status|restart|reload|force-reload)
    # do nothing
  ;;
esac
__EOF__

cat > /etc/ovirt-engine/post-engine-setup.sh <<__EOF__
while [ -z "\$(find /var/lib/exports/iso -name 11111111-1111-1111-1111-111111111111)" ]
do
 sleep 5
done
echo "begin configure iso"
ISOPATH=\`find /var/lib/exports/iso -name 11111111-1111-1111-1111-111111111111\`
ln /usr/share/ovirt-guest-tools/ovirt-guest-tools-*.iso \$ISOPATH/WGT-3.5_5.iso
echo "finished configure iso"
__EOF__

cat > /usr/libexec/vdsm/hooks/before_vm_start/01_license <<__EOF__
#!/usr/bin/python

import sys
from subprocess import call

if not 0 == call(['eayunos-lic']):
    sys.stderr.write('Cannot run vm becasue license validation failed\n')
    sys.exit(2)
__EOF__

chmod 755 /usr/libexec/vdsm/hooks/before_vm_start/01_license
chmod a+x /etc/rc.d/init.d/eayunos-init-setup
chmod a+x /etc/ovirt-engine/post-engine-setup.sh
chkconfig NetworkManager off
chkconfig eayunos-init-setup on
chkconfig engine-manage-domains on

IPADDR=`ip addr show eth0|grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*'|grep -Eo '([0-9]*\.){3}[0-9]*'`
sed -i "s/{\"allowedMessageOrigins\": \"https:.*\"}/{\"allowedMessageOrigins\": [\"https:\/\/$IPADDR\", \"https:\/\/$HOSTNAME\"]}/g" /usr/share/ovirt-engine/ui-plugins/emdplugin.json

sed '/# nfs/a -A INPUT -p tcp -m tcp --dport 892   -j ACCEPT' iptables
%end

# Reboot after installation
reboot --eject
