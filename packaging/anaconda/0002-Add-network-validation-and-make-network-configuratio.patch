From 0fb4645f72e6b8a1f6871b5a01a62ff941a7b80c Mon Sep 17 00:00:00 2001
From: walteryang47 <walteryang47@gmail.com>
Date: Thu, 25 Jun 2015 02:23:21 -0400
Subject: [PATCH 2/4] Add network validation and make network configuration
 mandatory

Signed-off-by: walteryang47 <walteryang47@gmail.com>
---
 pyanaconda/network.py               |  3 +++
 pyanaconda/ui/gui/spokes/network.py | 26 +++++++++++++++++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/pyanaconda/network.py b/pyanaconda/network.py
index 7a74b90..b80a3f9 100644
--- a/pyanaconda/network.py
+++ b/pyanaconda/network.py
@@ -96,6 +96,9 @@ def sanityCheckHostname(hostname):
     if not hostname:
         return (False, _("Host name cannot be None or an empty string."))
 
+    if hostname == "localhost" or hostname == "localhost.localdomain":
+        return (False, _("Host name cannot be default localhost names."))
+
     if len(hostname) > 255:
         return (False, _("Host name must be 255 or fewer characters in length."))
 
diff --git a/pyanaconda/ui/gui/spokes/network.py b/pyanaconda/ui/gui/spokes/network.py
index 8e89331..98919ba 100644
--- a/pyanaconda/ui/gui/spokes/network.py
+++ b/pyanaconda/ui/gui/spokes/network.py
@@ -1414,7 +1414,7 @@ class NetworkSpoke(FirstbootSpokeMixIn, NormalSpoke):
 
     @property
     def mandatory(self):
-        return self.data.method.method in ("url", "nfs")
+        return True
 
     @property
     def status(self):
@@ -1467,6 +1467,30 @@ class NetworkSpoke(FirstbootSpokeMixIn, NormalSpoke):
             self.set_warning(msg)
             self.network_control_box.entry_hostname.grab_focus()
             self.window.show_all()
+            return;
+
+        valid = False
+        try:
+            ipv4cfg = nm.nm_device_ip_config(self.network_control_box.selected_dev_cfg().device.get_iface(), version=4)
+        except nm.UnknownDeviceError:
+            ipv4cfg = None
+        if ipv4cfg and ipv4cfg[0]:
+            addr_str, prefix, gateway_str = ipv4cfg[0][0]
+        else:
+            gateway_str = None
+        if gateway_str:
+            ret = subprocess.call("ping -c 1 -W 10 %s" % gateway_str,
+            shell=True,
+            stdout=open('/dev/null', 'w'),
+            stderr=subprocess.STDOUT)
+            if ret == 0:
+                valid = True
+        log.info("gateway: >%s<, valid: %s.", gateway_str, valid)
+        if not valid:
+            self.clear_info()
+            msg = _("Cannot access gateway: %s") % gateway_str
+            self.set_warning(msg)
+            self.window.show_all()
         else:
             self.clear_info()
             NormalSpoke.on_back_clicked(self, button)
-- 
1.8.3.1

